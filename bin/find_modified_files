#!/usr/bin/env python3
"""
Find files modified today and log them to a text file.
Uses local time by default.
"""

import datetime
import sys
from pathlib import Path

def find_files_modified_today(search_directory: str, log_file_path: str) -> None:
    today = datetime.date.today()
    start_of_day = datetime.datetime.combine(today, datetime.time.min)
    end_of_day = datetime.datetime.combine(today, datetime.time.max)

    search_path = Path(search_directory)
    if not search_path.exists():
        print(f"Error: Directory '{search_directory}' does not exist.")
        sys.exit(1)

    log_path = Path(log_file_path).resolve()

    with open(log_path, 'w', encoding='utf-8') as log_file:
        log_file.write(f"Files modified on {today}:\n{'=' * 50}\n")
        file_count = 0

        for file_path in search_path.rglob('*'):
            if file_path.is_file():
                if file_path.resolve() == log_path:
                    continue  # skip log file itself
                try:
                    mtime = datetime.datetime.fromtimestamp(file_path.stat().st_mtime)
                    if start_of_day <= mtime <= end_of_day:
                        log_file.write(
                            f"File: {file_path.name}\n"
                            f"Location: {file_path.parent}\n"
                            f"Modified: {mtime:%Y-%m-%d %H:%M:%S}\n"
                            f"{'-' * 40}\n"
                        )
                        file_count += 1
                except (OSError, PermissionError) as e:
                    print(f"Warning: Could not access {file_path}: {e}")

        log_file.write(f"\nTotal files found: {file_count}\n")

    print(f"✅ Search completed — {file_count} files found.")
    print(f"Results saved to: {log_path}")

def main():
    search_dir = sys.argv[1] if len(sys.argv) > 1 else "."
    log_file = sys.argv[2] if len(sys.argv) > 2 else "modified_files_today.txt"

    print(f"Searching for files modified today in: {Path(search_dir).resolve()}")
    find_files_modified_today(search_dir, log_file)

if __name__ == "__main__":
    main()

